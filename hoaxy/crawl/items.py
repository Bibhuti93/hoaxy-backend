# -*- coding: utf-8 -*-
"""Scrapy pipline item classes.

This module provides structured data items used in crawling processes. There
are two categories:
    (1) scrapy.Item. These classes are generated by scrapy spiders and handled
by scrapy pipelines. The classes contains most fields of corresponding database
table, but not necessary same as database table.
    (2) self defined namedtuple. These classes are used to store data selected
from database and then used as input for scrapy spiders. Often they only
contains only a small part and neccessary fields of the corresponding
database table.
"""
#
# written by Chengcheng Shao <sccotte@gmail.com>

import collections

import scrapy


class UrlItem(scrapy.Item):
    """Url entry, see Url table model."""
    id = scrapy.Field()
    raw = scrapy.Field()
    expanded = scrapy.Field()
    canonical = scrapy.Field()
    created_at = scrapy.Field()
    date_published = scrapy.Field()
    article_id = scrapy.Field()
    site_id = scrapy.Field()
    status_code = scrapy.Field()
    # html is a temperate field, not in the database table.
    # before inserting into table, it would be popped out and copied to article
    html = scrapy.Field()


class ArticleItem(scrapy.Item):
    """Article entry, see Article table model."""
    id = scrapy.Field()
    url_id = scrapy.Field()
    canonical_url = scrapy.Field()
    site_id = scrapy.Field()
    group_id = scrapy.Field()
    title = scrapy.Field()
    content = scrapy.Field()
    meta = scrapy.Field()
    date_published = scrapy.Field()
    date_captured = scrapy.Field()
    # copied from urlitem
    html = scrapy.Field()


# Url namedtuples, when fetching html
NTUrl = collections.namedtuple('NTUrl', ['id', 'raw', 'created_at'])
# Article named tuples, when parsing article
NTArticle = collections.namedtuple('NTArticle',
                                   ['id', 'canonical_url', 'date_published'])
